<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:walla="clr-namespace:ManageWalla"
                    xmlns:gif="http://wpfanimatedgif.codeplex.com"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:ShaderEffectLibrary="clr-namespace:ShaderEffectLibrary;assembly=ShaderEffectLibrary">

    <ControlTemplate x:Key="templateRadioButton" TargetType="{x:Type RadioButton}">
        <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
            <Rectangle x:Name="outerRectangle" StrokeThickness="0.5" Opacity="0.6">

                <Rectangle.Stroke>
                    <SolidColorBrush x:Name="innerStrokeBrush" Color="{Binding RelativeSource={RelativeSource TemplatedParent},Path=BorderBrush.Color}" />
                </Rectangle.Stroke>

                <Rectangle.Fill>
                    <SolidColorBrush Color="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Background.Color}" />
                </Rectangle.Fill>

            </Rectangle>

            <StackPanel Orientation="Horizontal" Margin="{TemplateBinding Margin}" VerticalAlignment="Center">
                <Image x:Name="innerImage" Source="{DynamicResource radioNotSelectedImageSrc}" Height="10" Width="10" Margin="2" />
                <ContentPresenter Margin="2" />
            </StackPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="innerImage" Property="Source" Value="{DynamicResource radioSelectedImageSrc}" />
                <Setter TargetName="outerRectangle" Property="Opacity" Value="1.0" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="outerRectangle" Property="Opacity" Value="1.0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="templateRadioButtonPaneHeader" TargetType="{x:Type RadioButton}">
        <Grid>
            <Rectangle x:Name="outerRectangle" StrokeThickness="0">
                <Rectangle.Stroke>
                    <SolidColorBrush Color="{Binding RelativeSource={RelativeSource TemplatedParent},Path=BorderBrush.Color}" />
                </Rectangle.Stroke>

                <Rectangle.Fill>
                    <SolidColorBrush Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background.Color}" Opacity="0.5" />
                </Rectangle.Fill>
            </Rectangle>
            <ContentPresenter Margin="{TemplateBinding Margin}" />
        </Grid>
        <!--
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="outerRectangle" Property="StrokeThickness" Value="1" />
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="outerRectangle" Property="StrokeThickness" Value="1.5" />
            </Trigger>
        </ControlTemplate.Triggers>
        -->
    </ControlTemplate>

    <ControlTemplate x:Key="templateRefreshButton" TargetType="{x:Type Button}">
        <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
            <Image x:Name="imageRefresh" gif:ImageBehavior.AnimatedSource="{StaticResource refreshImageSelectedSrc}" Height="29"  />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" />
                    <Condition Property="Tag">
                        <Condition.Value>
                            <sys:Boolean>False</sys:Boolean>
                        </Condition.Value>
                    </Condition>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                <Setter TargetName="imageRefresh" Property="gif:ImageBehavior.AnimatedSource" Value="{StaticResource refreshImageSrc}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <Trigger Property="Tag">
                <Trigger.Value>
                    <sys:Boolean>True</sys:Boolean>
                </Trigger.Value>
            <Setter TargetName="imageRefresh" Property="gif:ImageBehavior.AnimatedSource" Value="{StaticResource refreshImageRotatingSrc}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
            <Setter TargetName="imageRefresh" Property="Height" Value="28" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
            <Setter TargetName="imageRefresh" Property="Opacity" Value="0.7" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="templateButton" TargetType="{x:Type Button}">
        <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
            <Rectangle x:Name="outerRectangle" StrokeThickness="{Binding RelativeSource={RelativeSource TemplatedParent},Path=BorderThickness.Top}">
                
                <Rectangle.Stroke>
                    <SolidColorBrush Color="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Foreground.Color}" />
                </Rectangle.Stroke>

                <Rectangle.Fill>
                    <SolidColorBrush Color="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Background.Color}" />
                </Rectangle.Fill>

            </Rectangle>

            <ContentPresenter Margin="{TemplateBinding Padding}" />

        </Grid>
        <ControlTemplate.Triggers>
<!--
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="outerRectangle" Property="StrokeThickness" Value="1.5" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="outerRectangle" Property="StrokeThickness" Value="1.5" />
                <Setter TargetName="outerRectangle" Property="RenderTransformOrigin" Value="0.5,0.5" />
                <Setter TargetName="outerRectangle" Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX=".96" ScaleY=".98" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            -->
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="templateToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
            <Rectangle x:Name="outerRectangle" StrokeThickness="{Binding RelativeSource={RelativeSource TemplatedParent},Path=BorderThickness.Top}">

                <Rectangle.Stroke>
                    <SolidColorBrush x:Name="innerStrokeBrush" Color="{Binding RelativeSource={RelativeSource TemplatedParent},Path=BorderBrush.Color}" />
                </Rectangle.Stroke>

                <Rectangle.Fill>
                    <SolidColorBrush Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background.Color}" />
                </Rectangle.Fill>
            </Rectangle>

            <StackPanel Orientation="Horizontal" Margin="{TemplateBinding Margin}" VerticalAlignment="Center">
                <Image x:Name="innerImage" Source="{DynamicResource radioNotSelectedImageSrc}" Height="10" Width="10" Margin="2" />
                <ContentPresenter Margin="2" />
            </StackPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="innerImage" Property="Source" Value="{DynamicResource radioSelectedImageSrc}" />
                <Setter TargetName="outerRectangle" Property="Opacity" Value="1.0" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="outerRectangle" Property="Opacity" Value="1.0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Standard Combo Box Style\Template, mix and match.-->
    <ControlTemplate x:Key="ComboBoxToggleButton"
                 TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Arrow"
                                            To="{StaticResource FontBorderColourSelected}" Duration="0:0:0.25" />

                            <ColorAnimation Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="Border"
                                                To="{StaticResource FontBorderColourSelected}" Duration="0:0:0.25" />
                        </Storyboard>
                    </VisualState>
                    
                    
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled" />

                </VisualStateGroup>
                
                <!--
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border"
                                                To="{StaticResource cmbHeaderButtonSelected}" Duration="0:0:0.25" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
                -->
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Border"
                    Grid.ColumnSpan="2"
                    CornerRadius="0"
                    BorderThickness="0.5"
                    BorderBrush="{StaticResource FontBorderBrush}"
                    Background="{DynamicResource EntryControlBackgroundBrush}">
            </Border>
            <Border 
                    Grid.Column="0"
                    CornerRadius="0,0,0,0"
                    Margin="1" 
                    Background="{DynamicResource EntryControlBackgroundBrush}">
            </Border>
            <Path x:Name="Arrow"
                            Grid.Column="1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M 0 0 L 4 4 L 8 0 Z" 
                            Fill="{StaticResource FontBorderBrush}">
            </Path>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox"
                 TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="{DynamicResource EntryControlBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource FontBorderBrush}" />
        <Setter Property="SnapsToDevicePixels"
          Value="true" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
          Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
          Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
          Value="true" />
        <Setter Property="MinWidth"
          Value="40" />
        <Setter Property="MinHeight"
          Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames 
                                                Storyboard.TargetName="PART_EditableTextBox"
                                                Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame 
                                                    KeyTime="0"
                                                    Value="{StaticResource FontBorderDisabledColour}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="PART_EditableTextBox">
                                            <DiscreteObjectKeyFrame 
                                                    KeyTime="0"
                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                                Storyboard.TargetName="ContentSite">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                    Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Uneditable" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ToggleButton x:Name="ToggleButton"
                                Template="{StaticResource ComboBoxToggleButton}"
                                Grid.Column="2"
                                Focusable="false"
                                ClickMode="Press"
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, 
                                RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ContentPresenter x:Name="ContentSite"
                                        IsHitTestVisible="False"
                                        Content="{TemplateBinding SelectionBoxItem}"
                                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                        Margin="2,2,22,2"
                                        VerticalAlignment="Stretch"
                                        HorizontalAlignment="Left">
                        </ContentPresenter>
                        <TextBox x:Name="PART_EditableTextBox"
                                        Style="{x:Null}"
                                        Template="{StaticResource ComboBoxTextBox}"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Bottom"
                                        Margin="2,2,22,2"
                                        Focusable="True"
                                        Background="Transparent"
                                        Visibility="Hidden"
                                        IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <Popup x:Name="Popup"
                                         Placement="Bottom"
                                         IsOpen="{TemplateBinding IsDropDownOpen}"
                                         AllowsTransparency="True"
                                         Focusable="False"
                                         PopupAnimation="Slide">
                            <Grid x:Name="DropDown"
                                            
                                            SnapsToDevicePixels="True"
                                            MinWidth="{TemplateBinding ActualWidth}"
                                            MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" 
                                        BorderThickness="0.5" 
                                        Opacity="1.0"
                                        BorderBrush="{DynamicResource FontBorderBrushSelected}"
                                        Background="{DynamicResource ControlBackgroundBrush}">
                                </Border>
                                <ScrollViewer Margin="1" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems"
                   Value="false">
                            <Setter TargetName="DropDownBorder"
                    Property="MinHeight"
                    Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping"
                   Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                    Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup"
                   Property="AllowsTransparency"
                   Value="true">
                            <Setter TargetName="DropDownBorder"
                    Property="CornerRadius"
                    Value="0" />
                            <Setter TargetName="DropDownBorder"
                    Property="Margin"
                    Value="0,2,0,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ComboBoxItem}" x:Name="comboBoxItem" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Foreground" Value="{StaticResource FontBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    
                    <Border x:Name="Border"
                            Padding="2"
                            SnapsToDevicePixels="true"
                            Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlSelectedItemBackgroundColour}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <!--
                                        <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="comboBoxItem"
                                                To="{StaticResource FontBorderColourSelected}" Duration="0:0:0.25" />-->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlSelectedItemBackgroundColour}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <!-- ComboBoxExtension for when it is present in the treeview -->    
    <ControlTemplate x:Key="templateComboToggleInTreeView" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border"
                                                To="{StaticResource ControlBackgroundMouseOverColour}" Duration="0:0:0.25" />
                        </Storyboard>
                    </VisualState>


                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled" />

                </VisualStateGroup>

                <!--
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border"
                                                To="{StaticResource cmbHeaderButtonSelected}" Duration="0:0:0.25" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
                -->
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Border"
                    Grid.ColumnSpan="2"
                    CornerRadius="0"
                    BorderThickness="0"
                    BorderBrush="{DynamicResource FontBorderBrush}"
                    Background="{DynamicResource PaneBodyBackgroundBrush}">
            </Border>
            <Border 
                    Grid.Column="0"
                    CornerRadius="0,0,0,0"
                    Margin="1" 
                    Background="{DynamicResource PaneBodyBackgroundBrush}">
            </Border>
            <Path x:Name="Arrow"
                            Grid.Column="1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M 0 0 L 4 4 L 8 0 Z" 
                            Fill="{DynamicResource FontBorderBrush}">
            </Path>
        </Grid>
    </ControlTemplate>

    <Style x:Key="styleComboBoxInTreeView" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="{DynamicResource PaneBodyBackgroundBrush}" />
        <Setter Property="SnapsToDevicePixels"
          Value="true" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
          Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
          Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
          Value="true" />
        <Setter Property="MinWidth"
          Value="40" />
        <Setter Property="MinHeight"
          Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames 
                                                Storyboard.TargetName="PART_EditableTextBox"
                                                Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame 
                                                    KeyTime="0"
                                                    Value="{StaticResource FontBorderDisabledColour}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="PART_EditableTextBox">
                                            <DiscreteObjectKeyFrame 
                                                    KeyTime="0"
                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                                Storyboard.TargetName="ContentSite">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                    Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Uneditable" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ToggleButton x:Name="ToggleButton"
                                Template="{StaticResource templateComboToggleInTreeView}"
                                Grid.Column="2"
                                Focusable="false"
                                ClickMode="Press"
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, 
                                RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ContentPresenter x:Name="ContentSite"
                                        IsHitTestVisible="False"
                                        Content="{TemplateBinding SelectionBoxItem}"
                                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                        Margin="2,2,22,2"
                                        VerticalAlignment="Stretch"
                                        HorizontalAlignment="Left">
                        </ContentPresenter>
                        <TextBox x:Name="PART_EditableTextBox"
                                        Style="{x:Null}"
                                        Template="{StaticResource ComboBoxTextBox}"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Bottom"
                                        Margin="2,2,22,2"
                                        Focusable="True"
                                        Background="Transparent"
                                        Visibility="Hidden"
                                        IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <Popup x:Name="Popup"
                                         Placement="Bottom"
                                         IsOpen="{TemplateBinding IsDropDownOpen}"
                                         AllowsTransparency="True"
                                         Focusable="False"
                                         PopupAnimation="Slide">
                            <Grid x:Name="DropDown"
                                            
                                            SnapsToDevicePixels="True"
                                            MinWidth="{TemplateBinding ActualWidth}"
                                            MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" 
                                        BorderThickness="1" 
                                        Opacity="0.8"
                                        BorderBrush="{DynamicResource FontBorderBrush}"
                                        Background="{DynamicResource ControlBackgroundBrush}">
                                </Border>
                                <ScrollViewer Margin="1" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems"
                   Value="false">
                            <Setter TargetName="DropDownBorder"
                    Property="MinHeight"
                    Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping"
                   Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                    Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup"
                   Property="AllowsTransparency"
                   Value="true">
                            <Setter TargetName="DropDownBorder"
                    Property="CornerRadius"
                    Value="0" />
                            <Setter TargetName="DropDownBorder"
                    Property="Margin"
                    Value="0,2,0,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





</ResourceDictionary>